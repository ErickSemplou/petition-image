
from flask import Flask, send_file
from PIL import Image, ImageDraw, ImageFont
import requests
from bs4 import BeautifulSoup
from io import BytesIO

app = Flask(__name__)

petitions = [
    ("–†–æ–º–∞–Ω –ö—ñ–Ω–∞—à", "https://petition.president.gov.ua/petition/245246"),
    ("–ê–Ω—Ç–æ–Ω –õ–∏—Å—Ç–æ–ø–∞–¥", "https://petition.president.gov.ua/petition/245654"),
    ("–í–∞—Å–∏–ª—å –ö–ª–µ–∫–∞—á", "https://petition.president.gov.ua/petition/244660"),
    ("–û–ª–µ–≥ –ì–Ω–µ–¥", "https://petition.president.gov.ua/petition/244852"),
    ("–Æ—Ä—ñ–π –ë—É–∑—ñ–∫–æ–≤", "https://petition.president.gov.ua/petition/244036"),
    ("–ë–æ–≥–¥–∞–Ω –¢–∞–Ω–∞—Å—é–∫", "https://petition.president.gov.ua/petition/243292"),
    ("–†—É—Å–ª–∞–Ω –í–∞–ª—å–∫–æ", "https://petition.president.gov.ua/petition/244108"),
    ("–Æ—Ä—ñ–π –ß–º—É—Ç", "https://petition.president.gov.ua/petition/243630")
]

def get_signatures(url):
    try:
        r = requests.get(url, timeout=5)
        soup = BeautifulSoup(r.text, 'html.parser')
        tag = soup.find("span", class_="counter")
        return tag.text.strip() if tag else "–ù/–î"
    except:
        return "–ù/–î"

@app.route("/")
def petition_image():
    img = Image.new('RGB', (1200, 630), color="#2C3E50")
    draw = ImageDraw.Draw(img)

    font_title = ImageFont.truetype("DejaVuSans-Bold.ttf", 38)
    font_text = ImageFont.truetype("DejaVuSans.ttf", 26)

    draw.text((60, 30), "üíî 8 –Ø–ù–ì–û–õ–Ü–í, –Ø–ö–Ü –ù–ê–ó–ê–í–ñ–î–ò –í –ü–ê–ú'–Ø–¢–Ü...", font=font_title, fill="#FFD700")
    draw.text((60, 90), "üôè –í–Ü–î–î–ê–ô –®–ê–ù–£ ‚Äî –ü–Ü–î–ü–ò–®–ò –ü–ï–¢–ò–¶–Ü–Æ", font=font_text, fill="#FFFFFF")

    y = 160
    for i, (name, url) in enumerate(petitions):
        count = get_signatures(url)
        draw.text((60, y), f"{i+1}. {name}", font=font_text, fill="#FFFFFF")
        draw.text((700, y), f"{count} –ø—ñ–¥–ø–∏—Å—ñ–≤", font=font_text, fill="#C0C0C0")
        y += 45

    draw.text((60, y + 20), "‚úçÔ∏è –ë—É–¥—å –ª–∞—Å–∫–∞, –ø—ñ–¥–ø–∏—à—ñ—Ç—å –ø–µ—Ç–∏—Ü—ñ—ó", font=font_text, fill="#D3D3D3")

    img_bytes = BytesIO()
    img.save(img_bytes, format='PNG')
    img_bytes.seek(0)
    return send_file(img_bytes, mimetype='image/png')
