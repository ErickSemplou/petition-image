# -*- coding: utf-8 -*-
from flask import Flask, send_file, render_template_string
import requests
from bs4 import BeautifulSoup
from io import BytesIO
from PIL import Image, ImageDraw, ImageFont
from pathlib import Path

app = Flask(__name__)

# 8 –ø–µ—Ç–∏—Ü—ñ–π: —ñ–º‚Äô—è —Ç–∞ –ø–æ—Å–∏–ª–∞–Ω–Ω—è
petitions = [
    {"name": "–†–æ–º–∞–Ω –ö—ñ–Ω–∞—à", "url": "https://petition.president.gov.ua/petition/245246"},
    {"name": "–ê–Ω—Ç–æ–Ω –õ–∏—Å—Ç–æ–ø–∞–¥", "url": "https://petition.president.gov.ua/petition/245654"},
    {"name": "–í–∞—Å–∏–ª—å –ö–ª–µ–∫–∞—á", "url": "https://petition.president.gov.ua/petition/244660"},
    {"name": "–û–ª–µ–≥ –ì–Ω–µ–¥", "url": "https://petition.president.gov.ua/petition/244852"},
    {"name": "–Æ—Ä—ñ–π –ë—É–∑—ñ–∫–æ–≤", "url": "https://petition.president.gov.ua/petition/244036"},
    {"name": "–ë–æ–≥–¥–∞–Ω –¢–∞–Ω–∞—Å—é–∫", "url": "https://petition.president.gov.ua/petition/243292"},
    {"name": "–†—É—Å–ª–∞–Ω –í–∞–ª—å–∫–æ", "url": "https://petition.president.gov.ua/petition/244108"},
    {"name": "–Æ—Ä—ñ–π –ß–º—É—Ç", "url": "https://petition.president.gov.ua/petition/243630"},
]

def get_votes(petition_url):
    try:
        r = requests.get(petition_url)
        soup = BeautifulSoup(r.text, "html.parser")
        span = soup.select_one("div.petition_votes_txt span")
        if span:
            return int(span.text.replace(" ", "").strip())
    except Exception as e:
        print(f"Error fetching {petition_url}: {e}")
    return 0

def create_image(petitions):
    width, height = 900, 700
    img = Image.new('RGB', (width, height), color='white')
    draw = ImageDraw.Draw(img)

    # –®—Ä–∏—Ñ—Ç (–ø–µ—Ä–µ–∫–æ–Ω–∞–π—Å—è, —â–æ —Ñ–∞–π–ª fonts/DejaVuSans.ttf —î —É –ø—Ä–æ–µ–∫—Ç—ñ)
    font_path = Path("fonts/DejaVuSans.ttf")
    try:
        font_large = ImageFont.truetype(str(font_path), 28)
        font_small = ImageFont.truetype(str(font_path), 22)
    except Exception as e:
        print(f"Font load error: {e}")
        font_large = font_small = ImageFont.load_default()

    y = 20
    for idx, p in enumerate(petitions):
        votes = get_votes(p["url"])
        text = f"{idx+1}. {p['name']}"
        count = f"{votes} –≥–æ–ª–æ—Å—ñ–≤"
        draw.text((20, y), text, font=font_large, fill="black")
        draw.text((600, y), count, font=font_small, fill="darkgreen")
        y += 60

    footer = "üíî 8 –Ø–ù–ì–û–õ–Ü–í, –Ø–ö–Ü –ù–ê–ó–ê–í–ñ–î–ò –£ –ü–ê–ú'–Ø–¢–Ü. –ü–Ü–î–ü–ò–®–ò–°–¨ üôè"
    draw.text((20, y + 30), footer, font=font_small, fill="red")

    output = BytesIO()
    img.save(output, format='PNG')
    output.seek(0)
    return output

@app.route("/petition_image")
def petition_image():
    image = create_image(petitions)
    return send_file(image, mimetype='image/png')

@app.route("/petition_page")
def petition_page():
    # –ó–∞–º—ñ–Ω–∏ –Ω–∞ –ø–æ–≤–Ω–∏–π URL, —è–∫—â–æ —Ä–æ–∑–≥–æ—Ä—Ç–∞—î—à –Ω–∞ —Å–µ—Ä–≤–µ—Ä—ñ
    image_url = "/petition_image"
    html = f"""
    <!DOCTYPE html>
    <html lang="uk">
    <head>
        <meta charset="UTF-8" />
        <title>–ü–µ—Ç–∏—Ü—ñ—ó - –ü—ñ–¥—Ç—Ä–∏–º–∞–π –≥–µ—Ä–æ—ó–≤</title>

        <!-- Open Graph –¥–ª—è Facebook -->
        <meta property="og:title" content="–ü–µ—Ç–∏—Ü—ñ—ó - –ü—ñ–¥—Ç—Ä–∏–º–∞–π –≥–µ—Ä–æ—ó–≤" />
        <meta property="og:description" content="–ü—ñ–¥–ø–∏—à–∏ –ø–µ—Ç–∏—Ü—ñ—ó –∑–∞ 8 –Ø–Ω–≥–æ–ª—ñ–≤, —è–∫—ñ –Ω–∞–∑–∞–≤–∂–¥–∏ —É –ø–∞–º'—è—Ç—ñ." />
        <meta property="og:image" content="{image_url}" />
        <meta property="og:type" content="website" />

        <!-- Twitter Cards -->
        <meta name="twitter:card" content="summary_large_image" />
        <meta name="twitter:title" content="–ü–µ—Ç–∏—Ü—ñ—ó - –ü—ñ–¥—Ç—Ä–∏–º–∞–π –≥–µ—Ä–æ—ó–≤" />
        <meta name="twitter:description" content="–ü—ñ–¥–ø–∏—à–∏ –ø–µ—Ç–∏—Ü—ñ—ó –∑–∞ 8 –Ø–Ω–≥–æ–ª—ñ–≤, —è–∫—ñ –Ω–∞–∑–∞–≤–∂–¥–∏ —É –ø–∞–º'—è—Ç—ñ." />
        <meta name="twitter:image" content="{image_url}" />
    </head>
    <body>
        <h1>–ü–µ—Ç–∏—Ü—ñ—ó - –ü—ñ–¥—Ç—Ä–∏–º–∞–π –≥–µ—Ä–æ—ó–≤</h1>
        <p>–ü–µ—Ä–µ–≥–ª—è–Ω—å –¥–∏–Ω–∞–º—ñ—á–Ω–∏–π —Å—Ç–∞—Ç—É—Å –ø–µ—Ç–∏—Ü—ñ–π –Ω–∏–∂—á–µ.</p>
        <img src="{image_url}" alt="–ü–µ—Ç–∏—Ü—ñ—ó" />
    </body>
    </html>
    """
    return render_template_string(html)

if __name__ == "__main__":
    app.run()
